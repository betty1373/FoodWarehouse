<Window x:Class="FW.WPF.Views.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" mc:Ignorable="d"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.fontawesome.com/icons/"
        xmlns:conv="clr-namespace:FW.WPF.Converters"
        xmlns:local="clr-namespace:FW.WPF.ViewModels"
        xmlns:custom="clr-namespace:DropdownMenuControl;assembly=DropdownMenuControl"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
        xmlns:vm="clr-namespace:FW.WPF.ViewModels"
        WindowStartupLocation="CenterScreen" Title="{Binding Title}"
        DataContext="{Binding MainModel, Source={StaticResource Locator}}"
        Width="1500" Height="900">
    <Window.Resources>
        <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <CollectionViewSource x:Key="ProductsByCategories" Source="{Binding Products}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="CategoryName" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <CollectionViewSource x:Key="ProductChanges" Source="{Binding ChangesProduct}">
        </CollectionViewSource>
        <CollectionViewSource x:Key="Ingredients" Source="{Binding IngredientsModel.Ingredients}" />
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding DataContext.LoginCommand,RelativeSource={RelativeSource AncestorType=Window}}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <DockPanel Margin="10">
        <StatusBar>
            <StatusBarItem>
                <TextBlock Text="{Binding LoginModel,Mode=OneWay}" FontWeight="Bold"/>
            </StatusBarItem>
        </StatusBar>
        <ToolBarTray>
            <ToolBar >
                <StackPanel Orientation="Horizontal" DataContext="{Binding DishesModel}">
                    <Button MinWidth="110" Command="{Binding ResetCommand}">
                        <DockPanel>
                            <fa:ImageAwesome Height="18" Icon="Solid_Folder"/>
                            <TextBlock Text="Add Dish" VerticalAlignment="Center" Margin="5"/>
                        </DockPanel>
                    </Button>
                </StackPanel>                          
                <Separator/>
                <StackPanel Orientation="Horizontal" DataContext="{Binding DishesModel}">
                    <Button Command="{Binding RecipesModel.AddCommand}" CommandParameter="{Binding SelectedDish.Id}">
                        <DockPanel>
                            <fa:ImageAwesome Height="18" Icon="Regular_File"/>
                            <TextBlock Text="Add Recipe" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </DockPanel>
                    </Button>
                </StackPanel>
            </ToolBar>
        </ToolBarTray>        
        <TabControl SelectedIndex="{Binding TabItem, Mode=TwoWay}" >
            <i:Interaction.Triggers>
                <i:DataTrigger Binding="{Binding LoginModel.IsLogin}" Value="True" >
                    <i:InvokeCommandAction Command="{Binding DishesModel.RefreshCommand}"
                                           CommandParameter="{Binding LoginModel.AccessToken}"/>
                </i:DataTrigger>
            </i:Interaction.Triggers>
            <TabItem Header="{Binding DishesModel.Title}" >
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <GroupBox Grid.Column="0" DataContext="{Binding DishesModel}" Grid.RowSpan="2">                        
                        <DataGrid ItemsSource="{Binding Dishes}" Name="dishes" 
                                  SelectedItem="{Binding SelectedDish}" SelectionMode="Single" IsReadOnly="False">
                            <DataGrid.Resources>
                                <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                                    <Setter Property="Padding" Value="-2"/>
                                    <Style.Triggers>
                                        <Trigger Property="Validation.HasError" Value="True">
                                            <Setter Property="Background" Value="Red"/>
                                            <Setter Property="ToolTip" 
                Value="{Binding RelativeSource={RelativeSource Self},
                  Path=(Validation.Errors)[0].ErrorContent}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.RowHeaderTemplate>
                                <DataTemplate>
                                </DataTemplate>
                            </DataGrid.RowHeaderTemplate>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Id" Binding="{Binding Id}"/>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
                                <DataGridTemplateColumn>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <custom:DropdownMenu>
                                                <custom:DropdownMenu.Resources>
                                                    <Style TargetType="Button">
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="BorderThickness" Value="0" />
                                                        <Setter Property="Padding" Value="20 10" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="Button">
                                                                    <Border
                                                        Padding="{TemplateBinding Padding}"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}">
                                                                        <ContentPresenter Content="{TemplateBinding Content}" />
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Trigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <ColorAnimation
                                                                Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                                To="LightGray"
                                                                Duration="0:0:0.1" />
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.EnterActions>
                                                                <Trigger.ExitActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <ColorAnimation
                                                                Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                                To="Transparent"
                                                                Duration="0:0:0.1" />
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.ExitActions>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </custom:DropdownMenu.Resources>
                                                <Border
                                    Background="White"
                                    BorderBrush="LightGray"
                                    BorderThickness="1">
                                                    <StackPanel>
                                                        <Button Content="Edit" Command="{Binding DataContext.DishesModel.EditCommand,  RelativeSource={RelativeSource AncestorType=Window}}"
                                                                 CommandParameter="{Binding Id}"/>
                                                        <Button Content="Delete" Command="{Binding DataContext.DishesModel.DeleteCommand,  RelativeSource={RelativeSource AncestorType=Window}}"
                                                                 CommandParameter="{Binding Id}"/>
                                                        <Button Command="{Binding DataContext.DishesModel.PrepareCommand,  RelativeSource={RelativeSource AncestorType=Window}}"
                        CommandParameter="{Binding Id}" Content="Приготовить блюдо" />
                                                    </StackPanel>
                                                </Border>
                                            </custom:DropdownMenu>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>
                    <GroupBox DataContext="{Binding DishesModel}" Grid.Row="2" Header="DishForm">
                        <Grid x:Name="FormDish"  
                          Visibility="{Binding IsFormVisible,Converter={StaticResource BoolToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="Name:" Margin="0 10 0 0"/>
                            <Label Content="Description:" Grid.Row="1"/>
                            <TextBox Text="{Binding DishModel.Name}" Height="20"  Width="Auto" MinWidth="150" Grid.Column="1"/>
                            <TextBox Text="{Binding DishModel.Description}" TextWrapping="WrapWithOverflow" Height="20" MinWidth="150" Width="Auto" Grid.Row="1" Grid.Column="1"/>
                            <Button Height="50" Width="100" Content="Save" HorizontalAlignment="Center"       
                                    Margin="20 10 0 0" Command="{Binding SaveCommand}" Grid.Row="2" Grid.Column="0"/>
                            <Button Height="50" Width="100" Content="Cancel" HorizontalAlignment="Center"       
                                    Margin="20 10 0 0" Command="{Binding ResetCommand}" Grid.Row="2" Grid.Column="1"/>
                            <TextBlock Text="{Binding ErrorMessage}" HorizontalAlignment="Center" Margin="20 0 0 0" Grid.Row="3" Height="30" Grid.ColumnSpan="2"/>
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="Description" Grid.Column="1" DataContext="{Binding DishesModel}" FontWeight="Bold">
                        <DockPanel DockPanel.Dock="Top">
                            <TextBox Text ="{Binding SelectedDish.Description, Mode=OneWay, FallbackValue=Description}" TextWrapping="Wrap"
                                    VerticalAlignment="Top" HorizontalAlignment="Left" Height="Auto" />
                        </DockPanel>
                    </GroupBox>
                    <GroupBox Header="Recipe" Grid.Column="1" DataContext="{Binding DishesModel.RecipesModel}" Grid.Row="1">                                                  
                            <DataGrid ItemsSource="{Binding Recipes}" SelectedItem="{Binding SelectedRecipe,Mode=TwoWay}"
                                VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Name="recipes" Height="Auto">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Id" Binding="{Binding Id}"/>
                                    <DataGridComboBoxColumn Header="Ingredient" DisplayMemberPath="Name" SelectedValuePath="Id" 
                                      SelectedValueBinding="{Binding IngredientId}" ItemsSource="{Binding Source={StaticResource Ingredients}}"/>
                                    <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}"/>
                                <DataGridTemplateColumn>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <custom:DropdownMenu>
                                                <custom:DropdownMenu.Resources>
                                                    <Style TargetType="Button">
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="BorderThickness" Value="0" />
                                                        <Setter Property="Padding" Value="20 10" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="Button">
                                                                    <Border
                                                        Padding="{TemplateBinding Padding}"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}">
                                                                        <ContentPresenter Content="{TemplateBinding Content}" />
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Trigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <ColorAnimation
                                                                Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                                To="LightGray"
                                                                Duration="0:0:0.1" />
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.EnterActions>
                                                                <Trigger.ExitActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <ColorAnimation
                                                                Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                                To="Transparent"
                                                                Duration="0:0:0.1" />
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </Trigger.ExitActions>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </custom:DropdownMenu.Resources>
                                                <Border
                                    Background="White"
                                    BorderBrush="LightGray"
                                    BorderThickness="1">
                                                    <StackPanel>
                                                        <Button Content="Edit" Command="{Binding DataContext.DishesModel.RecipesModel.EditCommand,  RelativeSource={RelativeSource AncestorType=Window}}"
                                                                 CommandParameter="{Binding Id}"/>
                                                        <Button Content="Delete" Command="{Binding DataContext.DishesModel.RecipesModel.DeleteCommand,  RelativeSource={RelativeSource AncestorType=Window}}"
                                                                 CommandParameter="{Binding Id}"/>
                                                    </StackPanel>
                                                </Border>
                                            </custom:DropdownMenu>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                            </DataGrid>                       
                           
                    </GroupBox>
                    <GroupBox DataContext="{Binding DishesModel.RecipesModel}" Grid.Row="2" Grid.Column="1" Header="RecipeForm">
                        <Grid x:Name="FormRecipe" Visibility="{Binding IsFormVisible,Converter={StaticResource BoolToVisibilityConverter}}" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="Quantity:" Grid.Row="2" Margin="0 10 0 0"/>
                            <Label Content="Ingredient:" Grid.Row="1"/>
                            <Label Content="Id:" Grid.Row="0"/>
                            <TextBox Text="{Binding Path=RecipeModel.Quantity}" Height="20"  Width="Auto" MinWidth="150" Grid.Row="2" Grid.Column="1"/>
                            <ComboBox DisplayMemberPath="Name" SelectedValue="{Binding RecipeModel.IngredientId,Mode=TwoWay}" 
                                      ItemsSource="{Binding Source={StaticResource Ingredients}}" 
                                  SelectedValuePath="Id" Height="20"  Width="Auto" Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Text="{Binding RecipeModel.Id}" Height="20"  Width="Auto" Grid.Row="0" MinWidth="150" Grid.Column="1"/>
                            <Button Height="50" Width="100" Content="Save" HorizontalAlignment="Center"       
                                    Margin="20 10 0 0" Command="{Binding SaveCommand}" Grid.Row="3" Grid.Column="0"/>
                            <Button Height="50" Width="100" Content="Cancel" HorizontalAlignment="Center"       
                                    Margin="20 10 0 0" Command="{Binding ResetCommand}" Grid.Row="3" Grid.Column="1"/>
                            <TextBlock Text="{Binding ErrorMessage}" HorizontalAlignment="Center" Margin="20 8 0 0" Grid.Row="4" Grid.ColumnSpan="2"/>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Products">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <ListView x:Name="ProductsByCategoriesListView" ItemsSource="{Binding Source={StaticResource ProductsByCategories}}"
                              SelectedItem="{Binding SelectedProduct}" HorizontalAlignment="Stretch" 
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionMode="Single"  >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView x:Name="gridView">
                                <GridViewColumn Header="Id" DisplayMemberBinding="{Binding Id}" />
                                <GridViewColumn Header="Наименование" DisplayMemberBinding="{Binding IngredientName}" />
                                <GridViewColumn Header="Кол-во" DisplayMemberBinding="{Binding Quantity}" />
                                <GridViewColumn Header="Дата" DisplayMemberBinding="{Binding ExpirationDate}" />
                                <GridView.ColumnHeaderContainerStyle>
                                    <Style TargetType="GridViewColumnHeader">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Style>
                                </GridView.ColumnHeaderContainerStyle>
                            </GridView>
                        </ListView.View>
                        <ListView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.ContainerStyle>
                                    <Style TargetType="{x:Type GroupItem}">
                                        <Setter Property="Margin" Value="0,0,0,5"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                                    <Expander IsExpanded="False" BorderBrush="Black" BorderThickness="0,0,0,1" Background="DarkGray">
                                                        <Expander.Header>
                                                            <TextBlock Foreground="White">
                                                            <Run>Категория: </Run>
                                                            <TextBlock FontWeight="Bold" Text="{Binding Path=Name}" />
                                                        </TextBlock>
                                                        </Expander.Header>
                                                        <Expander.Content>
                                                            <Border Background="White" Margin="2" CornerRadius="3">
                                                                <ItemsPresenter />
                                                            </Border>
                                                        </Expander.Content>
                                                    </Expander>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GroupStyle.ContainerStyle>
                            </GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <DockPanel Background="LightGray" LastChildFill="True" >
                                            <TextBlock Text="{Binding Path=Name}" Foreground="Black" Margin="10,0,0,0" />
                                        </DockPanel>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ListView.GroupStyle>
                    </ListView>
                    <ListView x:Name="ProductsChanges" ItemsSource="{Binding ChangesProduct}"
                             HorizontalAlignment="Stretch" Grid.Column="1"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionMode="Single"  >
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView x:Name="gridView1">
                                <GridViewColumn Header="Id" DisplayMemberBinding="{Binding Id}" />
                                <GridViewColumn Header="Кол-во" DisplayMemberBinding="{Binding Quantity}" />
                                <GridViewColumn Header="Дата" DisplayMemberBinding="{Binding CreatedOn}" />
                                <GridView.ColumnHeaderContainerStyle>
                                    <Style TargetType="GridViewColumnHeader">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </Style>
                                </GridView.ColumnHeaderContainerStyle>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
           
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
